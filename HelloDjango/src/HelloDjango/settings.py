"""
Django settings for HelloDjango project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.conf.global_settings import MEDIA_URL, MEDIA_ROOT, LOGIN_URL,\
    LOGIN_REDIRECT_URL, LOGOUT_REDIRECT_URL, AUTHENTICATION_BACKENDS
from django.urls.base import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#비로그인 상태에서 로그인이 필요한 URL 접근했을 대 로그인페이지의 URL경로 페이지로 이동
#reverse_lazy : 웹서버가 실행할 준비를 마쳤을 때 별칭을 통해 URL 경로 변환
LOGIN_URL = reverse_lazy('customuser:Login')
# 로그인 뷰로 로그인에 성공했을 때, 이동할 URL 경로
LOGIN_REDIRECT_URL = reverse_lazy('polls:index')
# 로그아웃 뷰로 로그아웃에 성공했을 때, 이동할 URL 경로
LOGOUT_REDIRECT_URL = reverse_lazy('polls:index')

#구글 개발자 사이트에 발급 받은 키와 비밀번호
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '113520735150-1f0g8vecjd2pouhlmeohfm2tupli0sjk.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '8GDxXxYahnq88HPn6EwoAxxA'

DISQUS_WEBSITE_SHORTNAME = 'testdjango01'
SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'social_core.backends.open_id.OpenIdAuth', #구글 인증
    'social_core.backends.google.GoogleOpenId',
    'social_core.backends.google.GoogleOAuth2',
    #구글 로그인과 프로젝트의 User 클래스와 매칭할 때 사용
    'django.contrib.auth.backends.ModelBackend'
    )

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'uweb$4ai-*j^4k765qy7s3%6wj4x^4!up=5xn*%=enpa@6#)x@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'polls',
    'customuser',
    'Blog',
    'social_django', #social-auth-app-django
    'disqus',
    'django.contrib.sites'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HelloDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'HelloDjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

#파이썬 코드에서 파일접근 할 때의 루트 경로
MEDIA_URL = '/uploads/'
#os.path.join(경로, 경로) : 두 폴더 경로를 붙임
#BASE_DIR : 프로젝트가 생성된 위치
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')













